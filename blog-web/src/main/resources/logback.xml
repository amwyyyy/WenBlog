<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration>

<!-- scan 是否定期扫描xml文件， scanPeriod扫描周期是60秒 -->
<configuration scan="true" scanPeriod="60 seconds">
    <!-- 属性 -->
    <property name="LOG_HOME" value="../logs"/>

    <!-- 输出到控制台 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>[%-4date][%highlight(%-5level)][%boldGreen(%thread) %X{requestId}][%boldBlue(%logger{50}:%L)] - %m%n</pattern>
        </encoder>
    </appender>

    <!-- 滚动日志文件 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/logback.log</file>
        <!-- 按天新建log日志 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- daily rollover -->
            <fileNamePattern>${LOG_HOME}/logback.%d{yyyy-MM-dd}_%i.log</fileNamePattern>
            <!-- 保留30天的历史日志 -->
            <maxHistory>30</maxHistory>

            <!-- 基于大小和时间切分文件 -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- 当一个日志大小大于10MB，则换一个新的日志。日志名的%i从0开始，自动递增 -->
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>

        <encoder>
            <!-- %ex就是指抛出的异常，full是显示全部，如果在{}中写入数字，则表示展示多少行 -->
            <pattern>[%-4date][%-5level][%boldGreen(%thread) %X{requestId}] [%logger{50}:%L] - %msg%n%ex{full, DISPLAY_EX_EVAL}</pattern>
        </encoder>
    </appender>

    <!-- 配置异步打印日志到文件 -->
    <appender name="ASYNC" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="FILE"/>
        <includeCallerData>true</includeCallerData>
    </appender>

    <root level="DEBUG">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="ASYNC"/>
    </root>
</configuration>